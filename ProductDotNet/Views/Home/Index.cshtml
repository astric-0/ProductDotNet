@{
    ViewData["Title"] = "Home Page";
}
@Html.Partial("~/Views/Templates/Input.cshtml")
@Html.Partial("~/Views/Templates/CheckBox.cshtml")
@Html.Partial("~/Views/Templates/Radio.cshtml")

<div id="app">
    {{ productInfo }}
    <form v-on:submit.prevent="onSubmit">
        <c-input label="Product Name" :model="productInfo" field="name" placeholder="Enter Product Name" :error-cb="errorSetter('name')" required>
        </c-input>
        <c-input label="Product ID" type="number" :model="productInfo" field="id" :error-cb="errorSetter('id')" placeholder="Enter Product Id" required>
        </c-input>

        <div class="row">
            <div class="col">
                <c-checkboxes label="Size" :options="options" :model="productInfo" field="size" :error-cb="errorSetter('size')" 
                    :validator="((value, _) => {
                                if (value.length > 2)
                                     return 'Select only two';
                                return false;
                              })"
                required>
                </c-checkboxes>
            </div>
            <div class="col">
                <c-radiobtns label="Color" :options="radioOptions" :model="productInfo" field="color" :error-cb="errorSetter('color')" required>
                </c-radiobtns>
            </div>
        </div>

        <c-input label="Description" 
                 type="textarea" 
                 :model="productInfo" 
                 field="description" 
                 placeholder="About the product" 
                 :error-cb="errorSetter('description')"
                 required
        >
        </c-input>
        <button class="btn btn-dark" @@click="postProduct(productInfo, errors)">Send</button>
    </form>
</div>

<script>

    function checkErrors(errors) {
        for (let error of Object.keys(errors))
            if (errors[error].length > 0) return true;
        return false;
    }

    const appProps = {
        setup(props) {
            const productInfo = Vue.ref({
                id: '', name: '',
                size: [],
                color: ''
            });

            const errors = Vue.ref({});

            const errorSetter = field => error => errors.value[field] = error;

            const options = [
                { value: "regular", name: "1x" },
                { value: "medium", name: "2x" },
                { value: "large", name: "3x" },
            ]

            const radioOptions = [
                { value: "red", name: "Red", color: "danger" },
                { value: "blue", name: "Blue", color: "primary" },
                { value: "black", name: "Black", color: "dark" },
            ]

            return { productInfo, errors, errorSetter, options, radioOptions };
        },

        methods: {
            async postProduct(product, errorlist) {
                try {
                    if (checkErrors(errorlist))
                        return errorsAlert(errorlist);

                    const response = await axios.post(gethost('/Home/AddProduct'), product);

                    if (response.status == 200) return console.log('Success');

                    throw new Error('Some error occured');
                } catch (error) {
                    errorAlert(error.message);
                }
            },

            onSubmit(event) {
                event.preventDefault();
            }
        }
    }
</script>